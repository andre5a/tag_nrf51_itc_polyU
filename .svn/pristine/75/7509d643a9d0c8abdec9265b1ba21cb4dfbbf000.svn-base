#include <stdint.h>
#include <string.h>
#include <stdbool.h>

#include "nrf51.h"
#include "nordic_common.h"
#include "nrf.h"
#include "nrf_soc.h"
#include "app_error.h"
#include "app_timer.h"
#include "lapa_board.h"
#include "nrf_sdm.h"
#include "nrf_gpio.h"
#include "timers.h"


APP_TIMER_DEF(battery);
APP_TIMER_DEF(authentication);
APP_TIMER_DEF(safety_mode);
APP_TIMER_DEF(snd_led);
APP_TIMER_DEF(button_char_update);
APP_TIMER_DEF(poff);
APP_TIMER_DEF(button_state);
APP_TIMER_DEF(safety_mode_tx_pwr_tout);
APP_TIMER_DEF(advertise2_start);
APP_TIMER_DEF(safety_mode_validation);
APP_TIMER_DEF(sfty_zone);
//APP_TIMER_DEF(rssi_burst);
APP_TIMER_DEF(safety_thread);
APP_TIMER_DEF(active_scan_enable);
APP_TIMER_DEF(sfty_far_signaling);
APP_TIMER_DEF(rssi_thread);

#if DEV_KIT
APP_TIMER_DEF(tstamp);
#endif

/**@brief Function for the Timer initialization.
 *
 * @details Initializes the timer module. This creates and starts application timers.
 */
void timers_init(void)
{

	uint32_t err_code;

    // Initialize timer module.

    APP_TIMER_INIT(APP_TIMER_PRESCALER, APP_TIMER_OP_QUEUE_SIZE, false);
///////////////////////////////////////////////////////////////////////////////////////////////////////////
	    // Create battery timer
    err_code = app_timer_create(&battery, APP_TIMER_MODE_SINGLE_SHOT, battery_base_time_handler);
    APP_ERROR_CHECK(err_code);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////
    err_code = app_timer_create(&authentication, APP_TIMER_MODE_SINGLE_SHOT, authentication_timeout_handler);
    APP_ERROR_CHECK(err_code);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////	
		//initialize safety mode timer
	err_code = app_timer_create(&safety_mode, APP_TIMER_MODE_SINGLE_SHOT, timer_safety_alarm_tout_handler);
    APP_ERROR_CHECK(err_code);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////	
    err_code = app_timer_create(&snd_led, APP_TIMER_MODE_SINGLE_SHOT, timer_beep_handler);
    APP_ERROR_CHECK(err_code);

    err_code = app_timer_create(&poff, APP_TIMER_MODE_SINGLE_SHOT, timer_poff_handler);
    APP_ERROR_CHECK(err_code);

    err_code = app_timer_create(&button_char_update, APP_TIMER_MODE_SINGLE_SHOT, timer_button_char_update_handler);
     APP_ERROR_CHECK(err_code);

    err_code = app_timer_create(&button_state, APP_TIMER_MODE_SINGLE_SHOT, timer_button_state_handler);
    APP_ERROR_CHECK(err_code);

    err_code = app_timer_create(&safety_mode_tx_pwr_tout, APP_TIMER_MODE_SINGLE_SHOT, timer_safety_mode_tx_pwr_tout_handler);
    APP_ERROR_CHECK(err_code);

    err_code = app_timer_create(&advertise2_start, APP_TIMER_MODE_SINGLE_SHOT, timer_adv2_handler);
    APP_ERROR_CHECK(err_code);

    err_code = app_timer_create(&sfty_zone, APP_TIMER_MODE_SINGLE_SHOT, timer_safety_process_handler);
    APP_ERROR_CHECK(err_code);

    //err_code = app_timer_create(&rssi_burst, APP_TIMER_MODE_SINGLE_SHOT, timer_rssi_burst_handler);
    //APP_ERROR_CHECK(err_code);

    err_code = app_timer_create(&safety_thread, APP_TIMER_MODE_SINGLE_SHOT, timer_safety_thread_handler);
    APP_ERROR_CHECK(err_code);

    err_code = app_timer_create(&rssi_thread, APP_TIMER_MODE_SINGLE_SHOT, timer_rssi_thread_handler);
    APP_ERROR_CHECK(err_code);


    err_code = app_timer_create(&sfty_far_signaling, APP_TIMER_MODE_SINGLE_SHOT, timer_sfty_far_signaling_handler);
    APP_ERROR_CHECK(err_code);


    err_code = app_timer_create(&active_scan_enable, APP_TIMER_MODE_SINGLE_SHOT, timer_active_scan_handler);
    APP_ERROR_CHECK(err_code);
#if (DEV_KIT)
    err_code = app_timer_create(&tstamp, APP_TIMER_MODE_REPEATED, timer_tstamp_handler);
    APP_ERROR_CHECK(err_code);
#endif

}




void timer_authentication_start(uint32_t time_ms)
{
	uint32_t err_code;
		err_code = app_timer_start(authentication, APP_TIMER_TICKS(time_ms, APP_TIMER_PRESCALER), NULL);
		APP_ERROR_CHECK(err_code);
}

void timer_authentication_stop(void)
{
	uint32_t err_code;
	//stop authentication timer
	err_code =	app_timer_stop(authentication);
	APP_ERROR_CHECK(err_code);
}

/////////////////////////////////////////////////////////////////////////////
void safety_mode_alarm_tout_start(uint32_t time_ms)
{
	uint32_t err_code;

		err_code = app_timer_start(safety_mode, APP_TIMER_TICKS(time_ms, APP_TIMER_PRESCALER), NULL);
		APP_ERROR_CHECK(err_code);
}

void safety_mode_alarm_tout_stop(void)
{
	uint32_t err_code;
	//stop authentication timer
	 err_code =		app_timer_stop(safety_mode);
     APP_ERROR_CHECK(err_code);
}

/////////////////////////////////////////////////////////////////////////////////////
void battery_timer_start(uint32_t time_ms)
{
		uint32_t err_code;
		// Start battery timer
   err_code = app_timer_start(battery, APP_TIMER_TICKS(time_ms, APP_TIMER_PRESCALER), NULL);
   APP_ERROR_CHECK(err_code);
}




void battery_timer_stop(void)
{
	uint32_t err_code;
	//stop authentication timer
    err_code = app_timer_stop(battery);
    APP_ERROR_CHECK(err_code);
}




void timer_button_char_update_start(uint32_t time_ms)
{
	uint32_t err_code;

	err_code = app_timer_start(button_char_update, APP_TIMER_TICKS(time_ms, APP_TIMER_PRESCALER), NULL);
		APP_ERROR_CHECK(err_code);
}


void timer_button_state_stop(void)
{
	uint32_t err_code;

	err_code =	app_timer_stop(button_state);
	APP_ERROR_CHECK(err_code);
}



void timer_button_state_start(uint32_t time_ms)
{
	uint32_t err_code;
    // Start application timers.
	err_code = app_timer_start(button_state, APP_TIMER_TICKS(time_ms, APP_TIMER_PRESCALER), NULL);
		APP_ERROR_CHECK(err_code);
}


void timer_poff_start(uint32_t time_ms)
{
	uint32_t err_code;

	//start timer for verifying authentication
		err_code = app_timer_start(poff, APP_TIMER_TICKS(time_ms, APP_TIMER_PRESCALER), NULL);
		APP_ERROR_CHECK(err_code);
}

void timer_poff_stop(void)
{
	uint32_t err_code;
	 err_code =		app_timer_stop(poff);
     APP_ERROR_CHECK(err_code);
}



void timer_safety_mode_tx_pwr_tout_start(uint32_t time_ms)
{
	uint32_t err_code;

	err_code = app_timer_start(safety_mode_tx_pwr_tout, APP_TIMER_TICKS(time_ms, APP_TIMER_PRESCALER), NULL);
		APP_ERROR_CHECK(err_code);
}


void timer_safety_mode_tx_pwr_tout_stop(void)
{
	uint32_t err_code;
	 err_code =		app_timer_stop(safety_mode_tx_pwr_tout);
     APP_ERROR_CHECK(err_code);
}



void timer_adv2_start(uint32_t time_ms)
{
	uint32_t err_code;

	err_code = app_timer_start(advertise2_start, APP_TIMER_TICKS(time_ms, APP_TIMER_PRESCALER), NULL);
		APP_ERROR_CHECK(err_code);
}


void timer_adv2_stop(void)
{
	uint32_t err_code;
	 err_code =		app_timer_stop(advertise2_start);
     APP_ERROR_CHECK(err_code);
}

void timer_beep_start(uint32_t time_ms)
{
	uint32_t err_code;
	err_code = app_timer_start(snd_led, APP_TIMER_TICKS(time_ms, APP_TIMER_PRESCALER), NULL);
	APP_ERROR_CHECK(err_code);
}

void timer_beep_stop(void)
{
	uint32_t err_code;

	err_code =	app_timer_stop(snd_led);
	APP_ERROR_CHECK(err_code);
}


void timer_safety_process_start(uint32_t time_ms)
{
	uint32_t err_code;

	err_code = app_timer_start(sfty_zone, APP_TIMER_TICKS(time_ms, APP_TIMER_PRESCALER), NULL);
		APP_ERROR_CHECK(err_code);
}


void timer_safety_process_stop(void)
{
	uint32_t err_code;
	 err_code =		app_timer_stop(sfty_zone);
     APP_ERROR_CHECK(err_code);
}
/*
void timer_rssi_burst_start(uint32_t time_ms)
{
	uint32_t err_code;

	err_code = app_timer_start(rssi_burst, APP_TIMER_TICKS(time_ms, APP_TIMER_PRESCALER), NULL);
		APP_ERROR_CHECK(err_code);
}
void timer_rssi_burst_stop(void)
{
	uint32_t err_code;
	 err_code =		app_timer_stop(rssi_burst);
     APP_ERROR_CHECK(err_code);
}

*/


void timer_safety_thread_start(uint32_t time_ms)
{
	uint32_t err_code;

	err_code = app_timer_start(safety_thread, APP_TIMER_TICKS(time_ms, APP_TIMER_PRESCALER), NULL);
		APP_ERROR_CHECK(err_code);
}
void timer_safety_thread_stop(void)
{
	uint32_t err_code;
	 err_code =		app_timer_stop(safety_thread);
     APP_ERROR_CHECK(err_code);
}


void timer_rssi_thread_start(uint32_t time_ms)
{
	uint32_t err_code;

	err_code = app_timer_start(rssi_thread, APP_TIMER_TICKS(time_ms, APP_TIMER_PRESCALER), NULL);
		APP_ERROR_CHECK(err_code);
}
void timer_rssi_thread_stop(void)
{
	uint32_t err_code;
	 err_code =		app_timer_stop(rssi_thread);
     APP_ERROR_CHECK(err_code);
}



void timer_sfty_far_signaling_start(uint32_t time_ms)
{
	uint32_t err_code;

	err_code = app_timer_start(sfty_far_signaling, APP_TIMER_TICKS(time_ms, APP_TIMER_PRESCALER), NULL);
		APP_ERROR_CHECK(err_code);
}
void timer_sfty_far_signaling_stop(void)
{
	uint32_t err_code;
	 err_code =		app_timer_stop(sfty_far_signaling);
     APP_ERROR_CHECK(err_code);
}


void timer_active_scan_start(uint32_t time_ms)
{
	uint32_t err_code;

	err_code = app_timer_start(active_scan_enable, APP_TIMER_TICKS(time_ms, APP_TIMER_PRESCALER), NULL);
		APP_ERROR_CHECK(err_code);
}
void timer_active_scan_stop(void)
{
	uint32_t err_code;
	 err_code =		app_timer_stop(active_scan_enable);
     APP_ERROR_CHECK(err_code);
}



#if DEV_KIT


void timer_tstamp_start(uint32_t time_ms)
{
	uint32_t err_code;

	err_code = app_timer_start(tstamp, APP_TIMER_TICKS(time_ms, APP_TIMER_PRESCALER), NULL);
		APP_ERROR_CHECK(err_code);
}
void timer_tstamp_stop(void)
{
	uint32_t err_code;
	 err_code =		app_timer_stop(tstamp);
     APP_ERROR_CHECK(err_code);
}

#endif

void set_tout_ms(uint32_t *count,uint32_t tout_ms,uint32_t base_time_ms)
{
	(*count)=tout_ms/base_time_ms;
}

uint32_t tout_run(uint32_t *count)
{
	if((*count)>0)
	(*count)--;
	return (*count);
}
